{
  "version": 3,
  "sources": ["../../leaflet.locatecontrol/src/L.Control.Locate.js"],
  "sourcesContent": ["/*!\nCopyright (c) 2016 Dominik Moritz\n\nThis file is part of the leaflet locate control. It is licensed under the MIT license.\nYou can find the project at: https://github.com/domoritz/leaflet-locatecontrol\n*/\n(function (factory, window) {\n  // see https://github.com/Leaflet/Leaflet/blob/master/PLUGIN-GUIDE.md#module-loaders\n  // for details on how to structure a leaflet plugin.\n\n  // define an AMD module that relies on 'leaflet'\n  if (typeof define === \"function\" && define.amd) {\n    define([\"leaflet\"], factory);\n\n    // define a Common JS module that relies on 'leaflet'\n  } else if (typeof exports === \"object\") {\n    if (typeof window !== \"undefined\" && window.L) {\n      module.exports = factory(L);\n    } else {\n      module.exports = factory(require(\"leaflet\"));\n    }\n  }\n\n  // attach your plugin to the global 'L' variable\n  if (typeof window !== \"undefined\" && window.L) {\n    window.L.Control.Locate = factory(L);\n  }\n})(function (L) {\n  const LDomUtilApplyClassesMethod = (method, element, classNames) => {\n    classNames = classNames.split(\" \");\n    classNames.forEach(function (className) {\n      L.DomUtil[method].call(this, element, className);\n    });\n  };\n\n  const addClasses = (el, names) => LDomUtilApplyClassesMethod(\"addClass\", el, names);\n  const removeClasses = (el, names) => LDomUtilApplyClassesMethod(\"removeClass\", el, names);\n\n  /**\n   * Compatible with L.Circle but a true marker instead of a path\n   */\n  const LocationMarker = L.Marker.extend({\n    initialize(latlng, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this.createIcon();\n    },\n\n    /**\n     * Create a styled circle location marker\n     */\n    createIcon() {\n      const opt = this.options;\n\n      let style = \"\";\n\n      if (opt.color !== undefined) {\n        style += `stroke:${opt.color};`;\n      }\n      if (opt.weight !== undefined) {\n        style += `stroke-width:${opt.weight};`;\n      }\n      if (opt.fillColor !== undefined) {\n        style += `fill:${opt.fillColor};`;\n      }\n      if (opt.fillOpacity !== undefined) {\n        style += `fill-opacity:${opt.fillOpacity};`;\n      }\n      if (opt.opacity !== undefined) {\n        style += `opacity:${opt.opacity};`;\n      }\n\n      const icon = this._getIconSVG(opt, style);\n\n      this._locationIcon = L.divIcon({\n        className: icon.className,\n        html: icon.svg,\n        iconSize: [icon.w, icon.h]\n      });\n\n      this.setIcon(this._locationIcon);\n    },\n\n    /**\n     * Return the raw svg for the shape\n     *\n     * Split so can be easily overridden\n     */\n    _getIconSVG(options, style) {\n      const r = options.radius;\n      const w = options.weight;\n      const s = r + w;\n      const s2 = s * 2;\n      const svg =\n        `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${s2}\" height=\"${s2}\" version=\"1.1\" viewBox=\"-${s} -${s} ${s2} ${s2}\">` +\n        '<circle r=\"' +\n        r +\n        '\" style=\"' +\n        style +\n        '\" />' +\n        \"</svg>\";\n      return {\n        className: \"leaflet-control-locate-location\",\n        svg,\n        w: s2,\n        h: s2\n      };\n    },\n\n    setStyle(style) {\n      L.Util.setOptions(this, style);\n      this.createIcon();\n    }\n  });\n\n  const CompassMarker = LocationMarker.extend({\n    initialize(latlng, heading, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this._heading = heading;\n      this.createIcon();\n    },\n\n    setHeading(heading) {\n      this._heading = heading;\n    },\n\n    /**\n     * Create a styled arrow compass marker\n     */\n    _getIconSVG(options, style) {\n      const r = options.radius;\n      const w = options.width + options.weight;\n      const h = (r + options.depth + options.weight) * 2;\n      const path = `M0,0 l${options.width / 2},${options.depth} l-${w},0 z`;\n      const svgstyle = `transform: rotate(${this._heading}deg)`;\n      const svg =\n        `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${w}\" height=\"${h}\" version=\"1.1\" viewBox=\"-${w / 2} 0 ${w} ${h}\" style=\"${svgstyle}\">` +\n        '<path d=\"' +\n        path +\n        '\" style=\"' +\n        style +\n        '\" />' +\n        \"</svg>\";\n      return {\n        className: \"leaflet-control-locate-heading\",\n        svg,\n        w,\n        h\n      };\n    }\n  });\n\n  const LocateControl = L.Control.extend({\n    options: {\n      /** Position of the control */\n      position: \"topleft\",\n      /** The layer that the user's location should be drawn on. By default creates a new layer. */\n      layer: undefined,\n      /**\n       * Automatically sets the map view (zoom and pan) to the user's location as it updates.\n       * While the map is following the user's location, the control is in the `following` state,\n       * which changes the style of the control and the circle marker.\n       *\n       * Possible values:\n       *  - false: never updates the map view when location changes.\n       *  - 'once': set the view when the location is first determined\n       *  - 'always': always updates the map view when location changes.\n       *              The map view follows the user's location.\n       *  - 'untilPan': like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       *  - 'untilPanOrZoom': (default) like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       */\n      setView: \"untilPanOrZoom\",\n      /** Keep the current map zoom level when setting the view and only pan. */\n      keepCurrentZoomLevel: false,\n      /** After activating the plugin by clicking on the icon, zoom to the selected zoom level, even when keepCurrentZoomLevel is true. Set to 'false' to disable this feature. */\n      initialZoomLevel: false,\n      /**\n       * This callback can be used to override the viewport tracking\n       * This function should return a LatLngBounds object.\n       *\n       * For example to extend the viewport to ensure that a particular LatLng is visible:\n       *\n       * getLocationBounds: function(locationEvent) {\n       *    return locationEvent.bounds.extend([-33.873085, 151.219273]);\n       * },\n       */\n      getLocationBounds(locationEvent) {\n        return locationEvent.bounds;\n      },\n      /** Smooth pan and zoom to the location of the marker. Only works in Leaflet 1.0+. */\n      flyTo: false,\n      /**\n       * The user location can be inside and outside the current view when the user clicks on the\n       * control that is already active. Both cases can be configures separately.\n       * Possible values are:\n       *  - 'setView': zoom and pan to the current location\n       *  - 'stop': stop locating and remove the location marker\n       */\n      clickBehavior: {\n        /** What should happen if the user clicks on the control while the location is within the current view. */\n        inView: \"stop\",\n        /** What should happen if the user clicks on the control while the location is outside the current view. */\n        outOfView: \"setView\",\n        /**\n         * What should happen if the user clicks on the control while the location is within the current view\n         * and we could be following but are not. Defaults to a special value which inherits from 'inView';\n         */\n        inViewNotFollowing: \"inView\"\n      },\n      /**\n       * If set, save the map bounds just before centering to the user's\n       * location. When control is disabled, set the view back to the\n       * bounds that were saved.\n       */\n      returnToPrevBounds: false,\n      /**\n       * Keep a cache of the location after the user deactivates the control. If set to false, the user has to wait\n       * until the locate API returns a new location before they see where they are again.\n       */\n      cacheLocation: true,\n      /** If set, a circle that shows the location accuracy is drawn. */\n      drawCircle: true,\n      /** If set, the marker at the users' location is drawn. */\n      drawMarker: true,\n      /** If set and supported then show the compass heading */\n      showCompass: true,\n      /** The class to be used to create the marker. For example L.CircleMarker or L.Marker */\n      markerClass: LocationMarker,\n      /** The class us be used to create the compass bearing arrow */\n      compassClass: CompassMarker,\n      /** Accuracy circle style properties. NOTE these styles should match the css animations styles */\n      circleStyle: {\n        className: \"leaflet-control-locate-circle\",\n        color: \"#136AEC\",\n        fillColor: \"#136AEC\",\n        fillOpacity: 0.15,\n        weight: 0\n      },\n      /** Inner marker style properties. Only works if your marker class supports `setStyle`. */\n      markerStyle: {\n        className: \"leaflet-control-locate-marker\",\n        color: \"#fff\",\n        fillColor: \"#2A93EE\",\n        fillOpacity: 1,\n        weight: 3,\n        opacity: 1,\n        radius: 9\n      },\n      /** Compass */\n      compassStyle: {\n        fillColor: \"#2A93EE\",\n        fillOpacity: 1,\n        weight: 0,\n        color: \"#fff\",\n        opacity: 1,\n        radius: 9, // How far is the arrow is from the center of of the marker\n        width: 9, // Width of the arrow\n        depth: 6 // Length of the arrow\n      },\n      /**\n       * Changes to accuracy circle and inner marker while following.\n       * It is only necessary to provide the properties that should change.\n       */\n      followCircleStyle: {},\n      followMarkerStyle: {\n        // color: '#FFA500',\n        // fillColor: '#FFB000'\n      },\n      followCompassStyle: {},\n      /** The CSS class for the icon. For example fa-location-arrow or fa-map-marker */\n      icon: \"leaflet-control-locate-location-arrow\",\n      iconLoading: \"leaflet-control-locate-spinner\",\n      /** The element to be created for icons. For example span or i */\n      iconElementTag: \"span\",\n      /** The element to be created for the text. For example small or span */\n      textElementTag: \"small\",\n      /** Padding around the accuracy circle. */\n      circlePadding: [0, 0],\n      /** Use metric units. */\n      metric: true,\n      /**\n       * This callback can be used in case you would like to override button creation behavior.\n       * This is useful for DOM manipulation frameworks such as angular etc.\n       * This function should return an object with HtmlElement for the button (link property) and the icon (icon property).\n       */\n      createButtonCallback(container, options) {\n        const link = L.DomUtil.create(\"a\", \"leaflet-bar-part leaflet-bar-part-single\", container);\n        link.title = options.strings.title;\n        link.href = \"#\";\n        link.setAttribute(\"role\", \"button\");\n        const icon = L.DomUtil.create(options.iconElementTag, options.icon, link);\n\n        if (options.strings.text !== undefined) {\n          const text = L.DomUtil.create(options.textElementTag, \"leaflet-locate-text\", link);\n          text.textContent = options.strings.text;\n          link.classList.add(\"leaflet-locate-text-active\");\n          link.parentNode.style.display = \"flex\";\n          if (options.icon.length > 0) {\n            icon.classList.add(\"leaflet-locate-icon\");\n          }\n        }\n\n        return { link, icon };\n      },\n      /** This event is called in case of any location error that is not a time out error. */\n      onLocationError(err, control) {\n        alert(err.message);\n      },\n      /**\n       * This event is called when the user's location is outside the bounds set on the map.\n       * The event is called repeatedly when the location changes.\n       */\n      onLocationOutsideMapBounds(control) {\n        control.stop();\n        alert(control.options.strings.outsideMapBoundsMsg);\n      },\n      /** Display a pop-up when the user click on the inner marker. */\n      showPopup: true,\n      strings: {\n        title: \"Show me where I am\",\n        metersUnit: \"meters\",\n        feetUnit: \"feet\",\n        popup: \"You are within {distance} {unit} from this point\",\n        outsideMapBoundsMsg: \"You seem located outside the boundaries of the map\"\n      },\n      /** The default options passed to leaflets locate method. */\n      locateOptions: {\n        maxZoom: Infinity,\n        watch: true, // if you overwrite this, visualization cannot be updated\n        setView: false // have to set this to false because we have to\n        // do setView manually\n      }\n    },\n\n    initialize(options) {\n      // set default options if nothing is set (merge one step deep)\n      for (const i in options) {\n        if (typeof this.options[i] === \"object\") {\n          L.extend(this.options[i], options[i]);\n        } else {\n          this.options[i] = options[i];\n        }\n      }\n\n      // extend the follow marker style and circle from the normal style\n      this.options.followMarkerStyle = L.extend({}, this.options.markerStyle, this.options.followMarkerStyle);\n      this.options.followCircleStyle = L.extend({}, this.options.circleStyle, this.options.followCircleStyle);\n      this.options.followCompassStyle = L.extend({}, this.options.compassStyle, this.options.followCompassStyle);\n    },\n\n    /**\n     * Add control to map. Returns the container for the control.\n     */\n    onAdd(map) {\n      const container = L.DomUtil.create(\"div\", \"leaflet-control-locate leaflet-bar leaflet-control\");\n      this._container = container;\n      this._map = map;\n      this._layer = this.options.layer || new L.LayerGroup();\n      this._layer.addTo(map);\n      this._event = undefined;\n      this._compassHeading = null;\n      this._prevBounds = null;\n\n      const linkAndIcon = this.options.createButtonCallback(container, this.options);\n      this._link = linkAndIcon.link;\n      this._icon = linkAndIcon.icon;\n\n      L.DomEvent.on(\n        this._link,\n        \"click\",\n        function (ev) {\n          L.DomEvent.stopPropagation(ev);\n          L.DomEvent.preventDefault(ev);\n          this._onClick();\n        },\n        this\n      ).on(this._link, \"dblclick\", L.DomEvent.stopPropagation);\n\n      this._resetVariables();\n\n      this._map.on(\"unload\", this._unload, this);\n\n      return container;\n    },\n\n    /**\n     * This method is called when the user clicks on the control.\n     */\n    _onClick() {\n      this._justClicked = true;\n      const wasFollowing = this._isFollowing();\n      this._userPanned = false;\n      this._userZoomed = false;\n\n      if (this._active && !this._event) {\n        // click while requesting\n        this.stop();\n      } else if (this._active) {\n        const behaviors = this.options.clickBehavior;\n        let behavior = behaviors.outOfView;\n        if (this._map.getBounds().contains(this._event.latlng)) {\n          behavior = wasFollowing ? behaviors.inView : behaviors.inViewNotFollowing;\n        }\n\n        // Allow inheriting from another behavior\n        if (behaviors[behavior]) {\n          behavior = behaviors[behavior];\n        }\n\n        switch (behavior) {\n          case \"setView\":\n            this.setView();\n            break;\n          case \"stop\":\n            this.stop();\n            if (this.options.returnToPrevBounds) {\n              const f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n              f.bind(this._map)(this._prevBounds);\n            }\n            break;\n        }\n      } else {\n        if (this.options.returnToPrevBounds) {\n          this._prevBounds = this._map.getBounds();\n        }\n        this.start();\n      }\n\n      this._updateContainerStyle();\n    },\n\n    /**\n     * Starts the plugin:\n     * - activates the engine\n     * - draws the marker (if coordinates available)\n     */\n    start() {\n      this._activate();\n\n      if (this._event) {\n        this._drawMarker(this._map);\n\n        // if we already have a location but the user clicked on the control\n        if (this.options.setView) {\n          this.setView();\n        }\n      }\n      this._updateContainerStyle();\n    },\n\n    /**\n     * Stops the plugin:\n     * - deactivates the engine\n     * - reinitializes the button\n     * - removes the marker\n     */\n    stop() {\n      this._deactivate();\n\n      this._cleanClasses();\n      this._resetVariables();\n\n      this._removeMarker();\n    },\n\n    /**\n     * Keep the control active but stop following the location\n     */\n    stopFollowing() {\n      this._userPanned = true;\n      this._updateContainerStyle();\n      this._drawMarker();\n    },\n\n    /**\n     * This method launches the location engine.\n     * It is called before the marker is updated,\n     * event if it does not mean that the event will be ready.\n     *\n     * Override it if you want to add more functionalities.\n     * It should set the this._active to true and do nothing if\n     * this._active is true.\n     */\n    _activate() {\n      if (this._active || !this._map) {\n        return;\n      }\n\n      this._map.locate(this.options.locateOptions);\n      this._map.fire(\"locateactivate\", this);\n      this._active = true;\n\n      // bind event listeners\n      this._map.on(\"locationfound\", this._onLocationFound, this);\n      this._map.on(\"locationerror\", this._onLocationError, this);\n      this._map.on(\"dragstart\", this._onDrag, this);\n      this._map.on(\"zoomstart\", this._onZoom, this);\n      this._map.on(\"zoomend\", this._onZoomEnd, this);\n      if (this.options.showCompass) {\n        const oriAbs = \"ondeviceorientationabsolute\" in window;\n        if (oriAbs || \"ondeviceorientation\" in window) {\n          const _this = this;\n          const deviceorientation = function () {\n            L.DomEvent.on(window, oriAbs ? \"deviceorientationabsolute\" : \"deviceorientation\", _this._onDeviceOrientation, _this);\n          };\n          if (DeviceOrientationEvent && typeof DeviceOrientationEvent.requestPermission === \"function\") {\n            DeviceOrientationEvent.requestPermission().then(function (permissionState) {\n              if (permissionState === \"granted\") {\n                deviceorientation();\n              }\n            });\n          } else {\n            deviceorientation();\n          }\n        }\n      }\n    },\n\n    /**\n     * Called to stop the location engine.\n     *\n     * Override it to shutdown any functionalities you added on start.\n     */\n    _deactivate() {\n      if (!this._active || !this._map) {\n        return;\n      }\n\n      this._map.stopLocate();\n      this._map.fire(\"locatedeactivate\", this);\n      this._active = false;\n\n      if (!this.options.cacheLocation) {\n        this._event = undefined;\n      }\n\n      // unbind event listeners\n      this._map.off(\"locationfound\", this._onLocationFound, this);\n      this._map.off(\"locationerror\", this._onLocationError, this);\n      this._map.off(\"dragstart\", this._onDrag, this);\n      this._map.off(\"zoomstart\", this._onZoom, this);\n      this._map.off(\"zoomend\", this._onZoomEnd, this);\n      if (this.options.showCompass) {\n        this._compassHeading = null;\n        if (\"ondeviceorientationabsolute\" in window) {\n          L.DomEvent.off(window, \"deviceorientationabsolute\", this._onDeviceOrientation, this);\n        } else if (\"ondeviceorientation\" in window) {\n          L.DomEvent.off(window, \"deviceorientation\", this._onDeviceOrientation, this);\n        }\n      }\n    },\n\n    /**\n     * Zoom (unless we should keep the zoom level) and an to the current view.\n     */\n    setView() {\n      this._drawMarker();\n      if (this._isOutsideMapBounds()) {\n        this._event = undefined; // clear the current location so we can get back into the bounds\n        this.options.onLocationOutsideMapBounds(this);\n      } else {\n        if (this._justClicked && this.options.initialZoomLevel !== false) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.setView;\n          f.bind(this._map)([this._event.latitude, this._event.longitude], this.options.initialZoomLevel);\n        } else if (this.options.keepCurrentZoomLevel) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.panTo;\n          f.bind(this._map)([this._event.latitude, this._event.longitude]);\n        } else {\n          var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n          // Ignore zoom events while setting the viewport as these would stop following\n          this._ignoreEvent = true;\n          f.bind(this._map)(this.options.getLocationBounds(this._event), {\n            padding: this.options.circlePadding,\n            maxZoom: this.options.initialZoomLevel || this.options.locateOptions.maxZoom\n          });\n          L.Util.requestAnimFrame(function () {\n            // Wait until after the next animFrame because the flyTo can be async\n            this._ignoreEvent = false;\n          }, this);\n        }\n      }\n    },\n\n    /**\n     *\n     */\n    _drawCompass() {\n      if (!this._event) {\n        return;\n      }\n\n      const latlng = this._event.latlng;\n\n      if (this.options.showCompass && latlng && this._compassHeading !== null) {\n        const cStyle = this._isFollowing() ? this.options.followCompassStyle : this.options.compassStyle;\n        if (!this._compass) {\n          this._compass = new this.options.compassClass(latlng, this._compassHeading, cStyle).addTo(this._layer);\n        } else {\n          this._compass.setLatLng(latlng);\n          this._compass.setHeading(this._compassHeading);\n          // If the compassClass can be updated with setStyle, update it.\n          if (this._compass.setStyle) {\n            this._compass.setStyle(cStyle);\n          }\n        }\n        //\n      }\n      if (this._compass && (!this.options.showCompass || this._compassHeading === null)) {\n        this._compass.removeFrom(this._layer);\n        this._compass = null;\n      }\n    },\n\n    /**\n     * Draw the marker and accuracy circle on the map.\n     *\n     * Uses the event retrieved from onLocationFound from the map.\n     */\n    _drawMarker() {\n      if (this._event.accuracy === undefined) {\n        this._event.accuracy = 0;\n      }\n\n      const radius = this._event.accuracy;\n      const latlng = this._event.latlng;\n\n      // circle with the radius of the location's accuracy\n      if (this.options.drawCircle) {\n        const style = this._isFollowing() ? this.options.followCircleStyle : this.options.circleStyle;\n\n        if (!this._circle) {\n          this._circle = L.circle(latlng, radius, style).addTo(this._layer);\n        } else {\n          this._circle.setLatLng(latlng).setRadius(radius).setStyle(style);\n        }\n      }\n\n      let distance;\n      let unit;\n      if (this.options.metric) {\n        distance = radius.toFixed(0);\n        unit = this.options.strings.metersUnit;\n      } else {\n        distance = (radius * 3.2808399).toFixed(0);\n        unit = this.options.strings.feetUnit;\n      }\n\n      // small inner marker\n      if (this.options.drawMarker) {\n        const mStyle = this._isFollowing() ? this.options.followMarkerStyle : this.options.markerStyle;\n        if (!this._marker) {\n          this._marker = new this.options.markerClass(latlng, mStyle).addTo(this._layer);\n        } else {\n          this._marker.setLatLng(latlng);\n          // If the markerClass can be updated with setStyle, update it.\n          if (this._marker.setStyle) {\n            this._marker.setStyle(mStyle);\n          }\n        }\n      }\n\n      this._drawCompass();\n\n      const t = this.options.strings.popup;\n      function getPopupText() {\n        if (typeof t === \"string\") {\n          return L.Util.template(t, { distance, unit });\n        } else if (typeof t === \"function\") {\n          return t({ distance, unit });\n        } else {\n          return t;\n        }\n      }\n      if (this.options.showPopup && t && this._marker) {\n        this._marker.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n      if (this.options.showPopup && t && this._compass) {\n        this._compass.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n    },\n\n    /**\n     * Remove the marker from map.\n     */\n    _removeMarker() {\n      this._layer.clearLayers();\n      this._marker = undefined;\n      this._circle = undefined;\n    },\n\n    /**\n     * Unload the plugin and all event listeners.\n     * Kind of the opposite of onAdd.\n     */\n    _unload() {\n      this.stop();\n      this._map.off(\"unload\", this._unload, this);\n    },\n\n    /**\n     * Sets the compass heading\n     */\n    _setCompassHeading(angle) {\n      if (!isNaN(parseFloat(angle)) && isFinite(angle)) {\n        angle = Math.round(angle);\n\n        this._compassHeading = angle;\n        L.Util.requestAnimFrame(this._drawCompass, this);\n      } else {\n        this._compassHeading = null;\n      }\n    },\n\n    /**\n     * If the compass fails calibration just fail safely and remove the compass\n     */\n    _onCompassNeedsCalibration() {\n      this._setCompassHeading();\n    },\n\n    /**\n     * Process and normalise compass events\n     */\n    _onDeviceOrientation(e) {\n      if (!this._active) {\n        return;\n      }\n\n      if (e.webkitCompassHeading) {\n        // iOS\n        this._setCompassHeading(e.webkitCompassHeading);\n      } else if (e.absolute && e.alpha) {\n        // Android\n        this._setCompassHeading(360 - e.alpha);\n      }\n    },\n\n    /**\n     * Calls deactivate and dispatches an error.\n     */\n    _onLocationError(err) {\n      // ignore time out error if the location is watched\n      if (err.code == 3 && this.options.locateOptions.watch) {\n        return;\n      }\n\n      this.stop();\n      this.options.onLocationError(err, this);\n    },\n\n    /**\n     * Stores the received event and updates the marker.\n     */\n    _onLocationFound(e) {\n      // no need to do anything if the location has not changed\n      if (this._event && this._event.latlng.lat === e.latlng.lat && this._event.latlng.lng === e.latlng.lng && this._event.accuracy === e.accuracy) {\n        return;\n      }\n\n      if (!this._active) {\n        // we may have a stray event\n        return;\n      }\n\n      this._event = e;\n\n      this._drawMarker();\n      this._updateContainerStyle();\n\n      switch (this.options.setView) {\n        case \"once\":\n          if (this._justClicked) {\n            this.setView();\n          }\n          break;\n        case \"untilPan\":\n          if (!this._userPanned) {\n            this.setView();\n          }\n          break;\n        case \"untilPanOrZoom\":\n          if (!this._userPanned && !this._userZoomed) {\n            this.setView();\n          }\n          break;\n        case \"always\":\n          this.setView();\n          break;\n        case false:\n          // don't set the view\n          break;\n      }\n\n      this._justClicked = false;\n    },\n\n    /**\n     * When the user drags. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onDrag() {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userPanned = true;\n        this._updateContainerStyle();\n        this._drawMarker();\n      }\n    },\n\n    /**\n     * When the user zooms. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onZoom() {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userZoomed = true;\n        this._updateContainerStyle();\n        this._drawMarker();\n      }\n    },\n\n    /**\n     * After a zoom ends update the compass and handle sideways zooms\n     */\n    _onZoomEnd() {\n      if (this._event) {\n        this._drawCompass();\n      }\n\n      if (this._event && !this._ignoreEvent) {\n        // If we have zoomed in and out and ended up sideways treat it as a pan\n        if (this._marker && !this._map.getBounds().pad(-0.3).contains(this._marker.getLatLng())) {\n          this._userPanned = true;\n          this._updateContainerStyle();\n          this._drawMarker();\n        }\n      }\n    },\n\n    /**\n     * Compute whether the map is following the user location with pan and zoom.\n     */\n    _isFollowing() {\n      if (!this._active) {\n        return false;\n      }\n\n      if (this.options.setView === \"always\") {\n        return true;\n      } else if (this.options.setView === \"untilPan\") {\n        return !this._userPanned;\n      } else if (this.options.setView === \"untilPanOrZoom\") {\n        return !this._userPanned && !this._userZoomed;\n      }\n    },\n\n    /**\n     * Check if location is in map bounds\n     */\n    _isOutsideMapBounds() {\n      if (this._event === undefined) {\n        return false;\n      }\n      return this._map.options.maxBounds && !this._map.options.maxBounds.contains(this._event.latlng);\n    },\n\n    /**\n     * Toggles button class between following and active.\n     */\n    _updateContainerStyle() {\n      if (!this._container) {\n        return;\n      }\n\n      if (this._active && !this._event) {\n        // active but don't have a location yet\n        this._setClasses(\"requesting\");\n      } else if (this._isFollowing()) {\n        this._setClasses(\"following\");\n      } else if (this._active) {\n        this._setClasses(\"active\");\n      } else {\n        this._cleanClasses();\n      }\n    },\n\n    /**\n     * Sets the CSS classes for the state.\n     */\n    _setClasses(state) {\n      if (state == \"requesting\") {\n        removeClasses(this._container, \"active following\");\n        addClasses(this._container, \"requesting\");\n\n        removeClasses(this._icon, this.options.icon);\n        addClasses(this._icon, this.options.iconLoading);\n      } else if (state == \"active\") {\n        removeClasses(this._container, \"requesting following\");\n        addClasses(this._container, \"active\");\n\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      } else if (state == \"following\") {\n        removeClasses(this._container, \"requesting\");\n        addClasses(this._container, \"active following\");\n\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      }\n    },\n\n    /**\n     * Removes all classes from button.\n     */\n    _cleanClasses() {\n      L.DomUtil.removeClass(this._container, \"requesting\");\n      L.DomUtil.removeClass(this._container, \"active\");\n      L.DomUtil.removeClass(this._container, \"following\");\n\n      removeClasses(this._icon, this.options.iconLoading);\n      addClasses(this._icon, this.options.icon);\n    },\n\n    /**\n     * Reinitializes state variables.\n     */\n    _resetVariables() {\n      // whether locate is active or not\n      this._active = false;\n\n      // true if the control was clicked for the first time\n      // we need this so we can pan and zoom once we have the location\n      this._justClicked = false;\n\n      // true if the user has panned the map after clicking the control\n      this._userPanned = false;\n\n      // true if the user has zoomed the map after clicking the control\n      this._userZoomed = false;\n    }\n  });\n\n  L.control.locate = (options) => new L.Control.Locate(options);\n\n  return LocateControl;\n}, window);\n"],
  "mappings": "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",
  "names": ["window", "L"]
}
